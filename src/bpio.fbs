namespace bpio;

//new tables to query device status, select and configure a mode, enable power, etc.
table StatusResponse {
  hardware_version_major:uint8; //HW version
  hardware_version_minor:uint8; //HW revision
  firmware_version_major:uint8;//FW version
  firmware_version_minor:uint8; //FW revision
  modes:[Mode]; // List of modes available on the device.
}

table Mode{
  id:uint8; // Unique ID for the mode.
  name:string; // Name of the mode.
}

table I2CConfig {
  speed_khz:uint32; // Speed in kHz.
}

union ModeConfiguration { I2CConfig,}

//use one or the other
table StatusRequest{
  id:uint8; // ID of the mode to query.
  name:string; // Mode enter, none for mode query.
  configuration:ModeConfiguration; 
}

table DataRequest {
  dstart:bool=true; // Start condition.
  dstart_alt:bool=false; // Alternate start condition.
  daddr:ubyte; // Device address (Bus Pirate automatically will set read/write bit)
  ddata:[ubyte]; // Data to write
  dreadbytes:uint32; // Number of bytes to read.
  dstop:bool=true; // Stop condition.
  dstop_alt:bool=false; // Alternate stop condition.
}

table DataResponse {
  ddata:[ubyte]; // Data read from device
  derror_message:string; // Error message if any.
}

union RequestPacketContents { StatusRequest, DataRequest}

table RequestPacket {
  version_major:uint8=0;
  version_minor:uint8=1;
  contents:RequestPacketContents;
}

union ResponsePacketContents { StatusResponse, DataResponse}

table ResponsePacket{
  version_major:uint8=0;
  version_minor:uint8=1;
  contents:ResponsePacketContents;
}

root_type ResponsePacket;