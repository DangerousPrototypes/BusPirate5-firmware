#ifndef BPIO_VERIFIER_H
#define BPIO_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef BPIO_READER_H
#include "bpio_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int bpio_StatusResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_Mode_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_I2CConfig_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_StatusRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_DataRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_DataResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_RequestPacket_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_ResponsePacket_verify_table(flatcc_table_verifier_descriptor_t *td);

static int bpio_ModeConfiguration_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, bpio_I2CConfig_verify_table); /* I2CConfig */
    default: return flatcc_verify_ok;
    }
}

static int bpio_RequestPacketContents_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, bpio_StatusRequest_verify_table); /* StatusRequest */
    case 2: return flatcc_verify_union_table(ud, bpio_DataRequest_verify_table); /* DataRequest */
    default: return flatcc_verify_ok;
    }
}

static int bpio_ResponsePacketContents_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, bpio_StatusResponse_verify_table); /* StatusResponse */
    case 2: return flatcc_verify_union_table(ud, bpio_DataResponse_verify_table); /* DataResponse */
    default: return flatcc_verify_ok;
    }
}

static int bpio_StatusResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* hardware_version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* hardware_version_minor */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* firmware_version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* firmware_version_minor */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 4, 0, &bpio_Mode_verify_table) /* modes */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_StatusResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusResponse_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusResponse_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusResponse_type_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusResponse_type_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_StatusResponse_verify_table);
}

static int bpio_Mode_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* id */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* name */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_Mode_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_Mode_identifier, &bpio_Mode_verify_table);
}

static inline int bpio_Mode_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_Mode_identifier, &bpio_Mode_verify_table);
}

static inline int bpio_Mode_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_Mode_type_identifier, &bpio_Mode_verify_table);
}

static inline int bpio_Mode_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_Mode_type_identifier, &bpio_Mode_verify_table);
}

static inline int bpio_Mode_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_Mode_verify_table);
}

static inline int bpio_Mode_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_Mode_verify_table);
}

static inline int bpio_Mode_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_Mode_verify_table);
}

static inline int bpio_Mode_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_Mode_verify_table);
}

static int bpio_I2CConfig_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* speed */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_I2CConfig_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_I2CConfig_identifier, &bpio_I2CConfig_verify_table);
}

static inline int bpio_I2CConfig_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_I2CConfig_identifier, &bpio_I2CConfig_verify_table);
}

static inline int bpio_I2CConfig_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_I2CConfig_type_identifier, &bpio_I2CConfig_verify_table);
}

static inline int bpio_I2CConfig_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_I2CConfig_type_identifier, &bpio_I2CConfig_verify_table);
}

static inline int bpio_I2CConfig_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_I2CConfig_verify_table);
}

static inline int bpio_I2CConfig_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_I2CConfig_verify_table);
}

static inline int bpio_I2CConfig_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_I2CConfig_verify_table);
}

static inline int bpio_I2CConfig_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_I2CConfig_verify_table);
}

static int bpio_StatusRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* id */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 3, 0, &bpio_ModeConfiguration_union_verifier) /* configuration */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_StatusRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusRequest_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusRequest_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusRequest_type_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusRequest_type_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_StatusRequest_verify_table);
}

static int bpio_DataRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* dstart */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* dstart_alt */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* daddr */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 1, 1, INT64_C(4294967295)) /* ddata */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 4, 4) /* dreadbytes */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 1, 1) /* dstop */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 1, 1) /* dstop_alt */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_DataRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataRequest_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataRequest_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataRequest_type_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataRequest_type_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_DataRequest_verify_table);
}

static int bpio_DataResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 1, 1, INT64_C(4294967295)) /* ddata */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* derror_message */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_DataResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataResponse_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataResponse_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataResponse_type_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataResponse_type_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_DataResponse_verify_table);
}

static int bpio_RequestPacket_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* version_minor */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 3, 0, &bpio_RequestPacketContents_union_verifier) /* contents */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_RequestPacket_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_RequestPacket_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_RequestPacket_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_RequestPacket_type_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_RequestPacket_type_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_RequestPacket_verify_table);
}

static int bpio_ResponsePacket_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* version_minor */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 3, 0, &bpio_ResponsePacketContents_union_verifier) /* contents */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_ResponsePacket_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ResponsePacket_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ResponsePacket_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ResponsePacket_type_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ResponsePacket_type_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_ResponsePacket_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BPIO_VERIFIER_H */
