#ifndef BPIO_BUILDER_H
#define BPIO_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef BPIO_READER_H
#include "bpio_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __I2C_Example_I2CRWRequest_required[] = { 0 };
typedef flatbuffers_ref_t I2C_Example_I2CRWRequest_ref_t;
static I2C_Example_I2CRWRequest_ref_t I2C_Example_I2CRWRequest_clone(flatbuffers_builder_t *B, I2C_Example_I2CRWRequest_table_t t);
__flatbuffers_build_table(flatbuffers_, I2C_Example_I2CRWRequest, 5)

static const flatbuffers_voffset_t __I2C_Example_I2CRWResponse_required[] = { 0 };
typedef flatbuffers_ref_t I2C_Example_I2CRWResponse_ref_t;
static I2C_Example_I2CRWResponse_ref_t I2C_Example_I2CRWResponse_clone(flatbuffers_builder_t *B, I2C_Example_I2CRWResponse_table_t t);
__flatbuffers_build_table(flatbuffers_, I2C_Example_I2CRWResponse, 3)

#define __I2C_Example_I2CRWRequest_formal_args ,\
  flatbuffers_bool_t v0, uint8_t v1, flatbuffers_uint8_vec_ref_t v2, uint32_t v3, flatbuffers_bool_t v4
#define __I2C_Example_I2CRWRequest_call_args ,\
  v0, v1, v2, v3, v4
static inline I2C_Example_I2CRWRequest_ref_t I2C_Example_I2CRWRequest_create(flatbuffers_builder_t *B __I2C_Example_I2CRWRequest_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, I2C_Example_I2CRWRequest, I2C_Example_I2CRWRequest_file_identifier, I2C_Example_I2CRWRequest_type_identifier)

#define __I2C_Example_I2CRWResponse_formal_args , flatbuffers_bool_t v0, flatbuffers_uint8_vec_ref_t v1, flatbuffers_string_ref_t v2
#define __I2C_Example_I2CRWResponse_call_args , v0, v1, v2
static inline I2C_Example_I2CRWResponse_ref_t I2C_Example_I2CRWResponse_create(flatbuffers_builder_t *B __I2C_Example_I2CRWResponse_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, I2C_Example_I2CRWResponse, I2C_Example_I2CRWResponse_file_identifier, I2C_Example_I2CRWResponse_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, I2C_Example_I2CRWRequest_i2cstart, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(1), I2C_Example_I2CRWRequest)
__flatbuffers_build_scalar_field(1, flatbuffers_, I2C_Example_I2CRWRequest_i2caddr, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), I2C_Example_I2CRWRequest)
__flatbuffers_build_vector_field(2, flatbuffers_, I2C_Example_I2CRWRequest_i2cdata, flatbuffers_uint8, uint8_t, I2C_Example_I2CRWRequest)
__flatbuffers_build_scalar_field(3, flatbuffers_, I2C_Example_I2CRWRequest_i2creadbytes, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), I2C_Example_I2CRWRequest)
__flatbuffers_build_scalar_field(4, flatbuffers_, I2C_Example_I2CRWRequest_i2cstop, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(1), I2C_Example_I2CRWRequest)

static inline I2C_Example_I2CRWRequest_ref_t I2C_Example_I2CRWRequest_create(flatbuffers_builder_t *B __I2C_Example_I2CRWRequest_formal_args)
{
    if (I2C_Example_I2CRWRequest_start(B)
        || I2C_Example_I2CRWRequest_i2cdata_add(B, v2)
        || I2C_Example_I2CRWRequest_i2creadbytes_add(B, v3)
        || I2C_Example_I2CRWRequest_i2cstart_add(B, v0)
        || I2C_Example_I2CRWRequest_i2caddr_add(B, v1)
        || I2C_Example_I2CRWRequest_i2cstop_add(B, v4)) {
        return 0;
    }
    return I2C_Example_I2CRWRequest_end(B);
}

static I2C_Example_I2CRWRequest_ref_t I2C_Example_I2CRWRequest_clone(flatbuffers_builder_t *B, I2C_Example_I2CRWRequest_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (I2C_Example_I2CRWRequest_start(B)
        || I2C_Example_I2CRWRequest_i2cdata_pick(B, t)
        || I2C_Example_I2CRWRequest_i2creadbytes_pick(B, t)
        || I2C_Example_I2CRWRequest_i2cstart_pick(B, t)
        || I2C_Example_I2CRWRequest_i2caddr_pick(B, t)
        || I2C_Example_I2CRWRequest_i2cstop_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, I2C_Example_I2CRWRequest_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, I2C_Example_I2CRWResponse_i2cack, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), I2C_Example_I2CRWResponse)
__flatbuffers_build_vector_field(1, flatbuffers_, I2C_Example_I2CRWResponse_i2cdata, flatbuffers_uint8, uint8_t, I2C_Example_I2CRWResponse)
__flatbuffers_build_string_field(2, flatbuffers_, I2C_Example_I2CRWResponse_i2cerror_message, I2C_Example_I2CRWResponse)

static inline I2C_Example_I2CRWResponse_ref_t I2C_Example_I2CRWResponse_create(flatbuffers_builder_t *B __I2C_Example_I2CRWResponse_formal_args)
{
    if (I2C_Example_I2CRWResponse_start(B)
        || I2C_Example_I2CRWResponse_i2cdata_add(B, v1)
        || I2C_Example_I2CRWResponse_i2cerror_message_add(B, v2)
        || I2C_Example_I2CRWResponse_i2cack_add(B, v0)) {
        return 0;
    }
    return I2C_Example_I2CRWResponse_end(B);
}

static I2C_Example_I2CRWResponse_ref_t I2C_Example_I2CRWResponse_clone(flatbuffers_builder_t *B, I2C_Example_I2CRWResponse_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (I2C_Example_I2CRWResponse_start(B)
        || I2C_Example_I2CRWResponse_i2cdata_pick(B, t)
        || I2C_Example_I2CRWResponse_i2cerror_message_pick(B, t)
        || I2C_Example_I2CRWResponse_i2cack_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, I2C_Example_I2CRWResponse_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BPIO_BUILDER_H */
