#ifndef BPIO_VERIFIER_H
#define BPIO_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef BPIO_READER_H
#include "bpio_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int I2C_Example_I2CRWRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int I2C_Example_I2CRWResponse_verify_table(flatcc_table_verifier_descriptor_t *td);

static int I2C_Example_I2CRWRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* start */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* addr */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 1, 1, INT64_C(4294967295)) /* data */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 4, 4) /* readbytes */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* stop */)) return ret;
    return flatcc_verify_ok;
}

static inline int I2C_Example_I2CRWRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, I2C_Example_I2CRWRequest_identifier, &I2C_Example_I2CRWRequest_verify_table);
}

static inline int I2C_Example_I2CRWRequest_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, I2C_Example_I2CRWRequest_identifier, &I2C_Example_I2CRWRequest_verify_table);
}

static inline int I2C_Example_I2CRWRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, I2C_Example_I2CRWRequest_type_identifier, &I2C_Example_I2CRWRequest_verify_table);
}

static inline int I2C_Example_I2CRWRequest_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, I2C_Example_I2CRWRequest_type_identifier, &I2C_Example_I2CRWRequest_verify_table);
}

static inline int I2C_Example_I2CRWRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &I2C_Example_I2CRWRequest_verify_table);
}

static inline int I2C_Example_I2CRWRequest_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &I2C_Example_I2CRWRequest_verify_table);
}

static inline int I2C_Example_I2CRWRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &I2C_Example_I2CRWRequest_verify_table);
}

static inline int I2C_Example_I2CRWRequest_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &I2C_Example_I2CRWRequest_verify_table);
}

static int I2C_Example_I2CRWResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* ack */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 1, 1, INT64_C(4294967295)) /* data */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* error_message */)) return ret;
    return flatcc_verify_ok;
}

static inline int I2C_Example_I2CRWResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, I2C_Example_I2CRWResponse_identifier, &I2C_Example_I2CRWResponse_verify_table);
}

static inline int I2C_Example_I2CRWResponse_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, I2C_Example_I2CRWResponse_identifier, &I2C_Example_I2CRWResponse_verify_table);
}

static inline int I2C_Example_I2CRWResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, I2C_Example_I2CRWResponse_type_identifier, &I2C_Example_I2CRWResponse_verify_table);
}

static inline int I2C_Example_I2CRWResponse_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, I2C_Example_I2CRWResponse_type_identifier, &I2C_Example_I2CRWResponse_verify_table);
}

static inline int I2C_Example_I2CRWResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &I2C_Example_I2CRWResponse_verify_table);
}

static inline int I2C_Example_I2CRWResponse_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &I2C_Example_I2CRWResponse_verify_table);
}

static inline int I2C_Example_I2CRWResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &I2C_Example_I2CRWResponse_verify_table);
}

static inline int I2C_Example_I2CRWResponse_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &I2C_Example_I2CRWResponse_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BPIO_VERIFIER_H */
