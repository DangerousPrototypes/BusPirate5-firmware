namespace BPIO2;

table I2CRWRequest {
  i2cstart:bool=true; // Start condition.
  i2caddr:ubyte; // Device address (Bus Pirate automatically will set read/write bit)
  i2cdata:[ubyte]; // Data to write
  i2creadbytes:uint32; // Number of bytes to read.
  i2cstop:bool=true; // Stop condition.
}
table I2CResponse {
  ack:bool; // Device acknowledged
  data:[ubyte]; // Data read from device
  error_message:string; // Error message if any.
}

enum PacketType:uint8 {
  I2CRWRequest = 0, // I2C Read/Write Request
  I2CResponse = 1, // I2C Response
}

union PacketContents { I2CRWRequest, I2CResponse }

table Packet {
  version_major:uint8=0;
  version_minor:uint8=1;
  type:PacketType; // Type of packet
  contents:PacketContents;
}

root_type Packet;