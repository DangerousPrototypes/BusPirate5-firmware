#ifndef BPIO_VERIFIER_H
#define BPIO_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef BPIO_READER_H
#include "bpio_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int bpio_StatusRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_StatusResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_ModeConfiguration_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_ConfigurationRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_ConfigurationResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_DataRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_DataResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_RequestPacket_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_ErrorResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int bpio_ResponsePacket_verify_table(flatcc_table_verifier_descriptor_t *td);

static int bpio_RequestPacketContents_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, bpio_StatusRequest_verify_table); /* StatusRequest */
    case 2: return flatcc_verify_union_table(ud, bpio_ConfigurationRequest_verify_table); /* ConfigurationRequest */
    case 3: return flatcc_verify_union_table(ud, bpio_DataRequest_verify_table); /* DataRequest */
    default: return flatcc_verify_ok;
    }
}

static int bpio_ResponsePacketContents_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, bpio_ErrorResponse_verify_table); /* ErrorResponse */
    case 2: return flatcc_verify_union_table(ud, bpio_StatusResponse_verify_table); /* StatusResponse */
    case 3: return flatcc_verify_union_table(ud, bpio_ConfigurationResponse_verify_table); /* ConfigurationResponse */
    case 4: return flatcc_verify_union_table(ud, bpio_DataResponse_verify_table); /* DataResponse */
    default: return flatcc_verify_ok;
    }
}

static int bpio_StatusRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 1, 1, INT64_C(4294967295)) /* query */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_StatusRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusRequest_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusRequest_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusRequest_type_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusRequest_type_identifier, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_StatusRequest_verify_table);
}

static inline int bpio_StatusRequest_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_StatusRequest_verify_table);
}

static int bpio_StatusResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* error */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* hardware_version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* hardware_version_minor */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* firmware_version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* firmware_version_minor */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 5, 0) /* firmware_git_hash */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 6, 0) /* firmware_date */)) return ret;
    if ((ret = flatcc_verify_string_vector_field(td, 7, 0) /* modes_available */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 8, 0) /* mode_current */)) return ret;
    if ((ret = flatcc_verify_string_vector_field(td, 9, 0) /* mode_pin_labels */)) return ret;
    if ((ret = flatcc_verify_field(td, 10, 1, 1) /* mode_bitorder_msb */)) return ret;
    if ((ret = flatcc_verify_field(td, 11, 1, 1) /* psu_enabled */)) return ret;
    if ((ret = flatcc_verify_field(td, 12, 4, 4) /* psu_set_mv */)) return ret;
    if ((ret = flatcc_verify_field(td, 13, 4, 4) /* psu_set_ma */)) return ret;
    if ((ret = flatcc_verify_field(td, 14, 4, 4) /* psu_measured_mv */)) return ret;
    if ((ret = flatcc_verify_field(td, 15, 4, 4) /* psu_measured_ma */)) return ret;
    if ((ret = flatcc_verify_field(td, 16, 1, 1) /* psu_current_error */)) return ret;
    if ((ret = flatcc_verify_field(td, 17, 1, 1) /* pullup_enabled */)) return ret;
    if ((ret = flatcc_verify_field(td, 18, 4, 4) /* pullx_config */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 19, 0, 4, 4, INT64_C(1073741823)) /* adc_mv */)) return ret;
    if ((ret = flatcc_verify_field(td, 20, 1, 1) /* io_direction */)) return ret;
    if ((ret = flatcc_verify_field(td, 21, 1, 1) /* io_value */)) return ret;
    if ((ret = flatcc_verify_field(td, 22, 4, 4) /* disk_size_mb */)) return ret;
    if ((ret = flatcc_verify_field(td, 23, 4, 4) /* disk_used_mb */)) return ret;
    if ((ret = flatcc_verify_field(td, 24, 1, 1) /* led_count */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_StatusResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusResponse_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusResponse_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_StatusResponse_type_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_StatusResponse_type_identifier, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_StatusResponse_verify_table);
}

static inline int bpio_StatusResponse_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_StatusResponse_verify_table);
}

static int bpio_ModeConfiguration_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* speed */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* data_bits */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* parity */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* stop_bits */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* flow_control */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 1, 1) /* signal_inversion */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 1, 1) /* clock_stretch */)) return ret;
    if ((ret = flatcc_verify_field(td, 7, 1, 1) /* clock_polarity */)) return ret;
    if ((ret = flatcc_verify_field(td, 8, 1, 1) /* clock_phase */)) return ret;
    if ((ret = flatcc_verify_field(td, 9, 1, 1) /* chip_select_idle */)) return ret;
    if ((ret = flatcc_verify_field(td, 10, 1, 1) /* submode */)) return ret;
    if ((ret = flatcc_verify_field(td, 11, 4, 4) /* tx_modulation */)) return ret;
    if ((ret = flatcc_verify_field(td, 12, 1, 1) /* rx_sensor */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_ModeConfiguration_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ModeConfiguration_identifier, &bpio_ModeConfiguration_verify_table);
}

static inline int bpio_ModeConfiguration_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ModeConfiguration_identifier, &bpio_ModeConfiguration_verify_table);
}

static inline int bpio_ModeConfiguration_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ModeConfiguration_type_identifier, &bpio_ModeConfiguration_verify_table);
}

static inline int bpio_ModeConfiguration_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ModeConfiguration_type_identifier, &bpio_ModeConfiguration_verify_table);
}

static inline int bpio_ModeConfiguration_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_ModeConfiguration_verify_table);
}

static inline int bpio_ModeConfiguration_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_ModeConfiguration_verify_table);
}

static inline int bpio_ModeConfiguration_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_ModeConfiguration_verify_table);
}

static inline int bpio_ModeConfiguration_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_ModeConfiguration_verify_table);
}

static int bpio_ConfigurationRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* mode */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &bpio_ModeConfiguration_verify_table) /* mode_configuration */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* mode_bitorder_msb */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* mode_bitorder_lsb */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* psu_disable */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 1, 1) /* psu_enable */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 4, 4) /* psu_set_mv */)) return ret;
    if ((ret = flatcc_verify_field(td, 7, 2, 2) /* psu_set_ma */)) return ret;
    if ((ret = flatcc_verify_field(td, 8, 1, 1) /* pullup_disable */)) return ret;
    if ((ret = flatcc_verify_field(td, 9, 1, 1) /* pullup_enable */)) return ret;
    if ((ret = flatcc_verify_field(td, 10, 4, 4) /* pullx_config */)) return ret;
    if ((ret = flatcc_verify_field(td, 11, 1, 1) /* io_direction_mask */)) return ret;
    if ((ret = flatcc_verify_field(td, 12, 1, 1) /* io_direction */)) return ret;
    if ((ret = flatcc_verify_field(td, 13, 1, 1) /* io_value_mask */)) return ret;
    if ((ret = flatcc_verify_field(td, 14, 1, 1) /* io_value */)) return ret;
    if ((ret = flatcc_verify_field(td, 15, 1, 1) /* led_resume */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 16, 0, 4, 4, INT64_C(1073741823)) /* led_color */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 17, 0) /* print_string */)) return ret;
    if ((ret = flatcc_verify_field(td, 18, 1, 1) /* hardware_bootloader */)) return ret;
    if ((ret = flatcc_verify_field(td, 19, 1, 1) /* hardware_reset */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_ConfigurationRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ConfigurationRequest_identifier, &bpio_ConfigurationRequest_verify_table);
}

static inline int bpio_ConfigurationRequest_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ConfigurationRequest_identifier, &bpio_ConfigurationRequest_verify_table);
}

static inline int bpio_ConfigurationRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ConfigurationRequest_type_identifier, &bpio_ConfigurationRequest_verify_table);
}

static inline int bpio_ConfigurationRequest_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ConfigurationRequest_type_identifier, &bpio_ConfigurationRequest_verify_table);
}

static inline int bpio_ConfigurationRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_ConfigurationRequest_verify_table);
}

static inline int bpio_ConfigurationRequest_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_ConfigurationRequest_verify_table);
}

static inline int bpio_ConfigurationRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_ConfigurationRequest_verify_table);
}

static inline int bpio_ConfigurationRequest_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_ConfigurationRequest_verify_table);
}

static int bpio_ConfigurationResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* error */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_ConfigurationResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ConfigurationResponse_identifier, &bpio_ConfigurationResponse_verify_table);
}

static inline int bpio_ConfigurationResponse_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ConfigurationResponse_identifier, &bpio_ConfigurationResponse_verify_table);
}

static inline int bpio_ConfigurationResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ConfigurationResponse_type_identifier, &bpio_ConfigurationResponse_verify_table);
}

static inline int bpio_ConfigurationResponse_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ConfigurationResponse_type_identifier, &bpio_ConfigurationResponse_verify_table);
}

static inline int bpio_ConfigurationResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_ConfigurationResponse_verify_table);
}

static inline int bpio_ConfigurationResponse_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_ConfigurationResponse_verify_table);
}

static inline int bpio_ConfigurationResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_ConfigurationResponse_verify_table);
}

static inline int bpio_ConfigurationResponse_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_ConfigurationResponse_verify_table);
}

static int bpio_DataRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* start_main */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* start_alt */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 1, 1, INT64_C(4294967295)) /* data_write */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 2, 2) /* bytes_read */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* stop_main */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 1, 1) /* stop_alt */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_DataRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataRequest_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataRequest_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataRequest_type_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataRequest_type_identifier, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_DataRequest_verify_table);
}

static inline int bpio_DataRequest_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_DataRequest_verify_table);
}

static int bpio_DataResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* error */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 1, 1, INT64_C(4294967295)) /* data_read */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_DataResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataResponse_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataResponse_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_DataResponse_type_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_DataResponse_type_identifier, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_DataResponse_verify_table);
}

static inline int bpio_DataResponse_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_DataResponse_verify_table);
}

static int bpio_RequestPacket_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* version_minor */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 3, 0, &bpio_RequestPacketContents_union_verifier) /* contents */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_RequestPacket_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_RequestPacket_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_RequestPacket_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_RequestPacket_type_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_RequestPacket_type_identifier, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_RequestPacket_verify_table);
}

static inline int bpio_RequestPacket_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_RequestPacket_verify_table);
}

static int bpio_ErrorResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* error */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_ErrorResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ErrorResponse_identifier, &bpio_ErrorResponse_verify_table);
}

static inline int bpio_ErrorResponse_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ErrorResponse_identifier, &bpio_ErrorResponse_verify_table);
}

static inline int bpio_ErrorResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ErrorResponse_type_identifier, &bpio_ErrorResponse_verify_table);
}

static inline int bpio_ErrorResponse_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ErrorResponse_type_identifier, &bpio_ErrorResponse_verify_table);
}

static inline int bpio_ErrorResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_ErrorResponse_verify_table);
}

static inline int bpio_ErrorResponse_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_ErrorResponse_verify_table);
}

static inline int bpio_ErrorResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_ErrorResponse_verify_table);
}

static inline int bpio_ErrorResponse_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_ErrorResponse_verify_table);
}

static int bpio_ResponsePacket_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* version_major */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* version_minor */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 3, 0, &bpio_ResponsePacketContents_union_verifier) /* contents */)) return ret;
    return flatcc_verify_ok;
}

static inline int bpio_ResponsePacket_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ResponsePacket_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ResponsePacket_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, bpio_ResponsePacket_type_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, bpio_ResponsePacket_type_identifier, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &bpio_ResponsePacket_verify_table);
}

static inline int bpio_ResponsePacket_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &bpio_ResponsePacket_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BPIO_VERIFIER_H */
