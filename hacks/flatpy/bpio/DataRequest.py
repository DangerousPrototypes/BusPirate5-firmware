# automatically generated by the FlatBuffers compiler, do not modify

# namespace: bpio

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DataRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DataRequest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDataRequest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DataRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DataRequest
    def StartMain(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # DataRequest
    def StartAlt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # DataRequest
    def DataWrite(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # DataRequest
    def DataWriteAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # DataRequest
    def DataWriteLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DataRequest
    def DataWriteIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # DataRequest
    def BytesRead(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # DataRequest
    def StopMain(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # DataRequest
    def StopAlt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def DataRequestStart(builder):
    builder.StartObject(6)

def Start(builder):
    DataRequestStart(builder)

def DataRequestAddStartMain(builder, startMain):
    builder.PrependBoolSlot(0, startMain, 0)

def AddStartMain(builder, startMain):
    DataRequestAddStartMain(builder, startMain)

def DataRequestAddStartAlt(builder, startAlt):
    builder.PrependBoolSlot(1, startAlt, 0)

def AddStartAlt(builder, startAlt):
    DataRequestAddStartAlt(builder, startAlt)

def DataRequestAddDataWrite(builder, dataWrite):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(dataWrite), 0)

def AddDataWrite(builder, dataWrite):
    DataRequestAddDataWrite(builder, dataWrite)

def DataRequestStartDataWriteVector(builder, numElems):
    return builder.StartVector(1, numElems, 1)

def StartDataWriteVector(builder, numElems):
    return DataRequestStartDataWriteVector(builder, numElems)

def DataRequestAddBytesRead(builder, bytesRead):
    builder.PrependUint16Slot(3, bytesRead, 0)

def AddBytesRead(builder, bytesRead):
    DataRequestAddBytesRead(builder, bytesRead)

def DataRequestAddStopMain(builder, stopMain):
    builder.PrependBoolSlot(4, stopMain, 0)

def AddStopMain(builder, stopMain):
    DataRequestAddStopMain(builder, stopMain)

def DataRequestAddStopAlt(builder, stopAlt):
    builder.PrependBoolSlot(5, stopAlt, 0)

def AddStopAlt(builder, stopAlt):
    DataRequestAddStopAlt(builder, stopAlt)

def DataRequestEnd(builder):
    return builder.EndObject()

def End(builder):
    return DataRequestEnd(builder)
